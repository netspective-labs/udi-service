# -----------------------------------------------------------------------------
# If PostgreSQL is not on the same network, connect to a remote Postgres server
# using SSH tunnel first. Assuming that Postgres listens on 5432 on remote:
#
#    ssh -fNTML 9432:localhost:5432 sshusername@you-server.com
#
# Then, just launch psql, connecting to port 9432 at localhost:
#
#    psql -h localhost -p 9432 -U <username> <dbname>
# -----------------------------------------------------------------------------
# see https://www.postgresql.org/docs/current/libpq-pgpass.html for docs
# -----------------------------------------------------------------------------
# * run `$HOME/bin/pgpass --help` to see how to use `pgpass` to process the 
#   contents of this file and emit in multiple formats (env, psql, etc.)
# * run `psqlconnect` at CLI to show a TUI to interactively select db conn
# -----------------------------------------------------------------------------
# Before each .pgpass line you should include a strict JSON5L definition that
# includes a line like { id: "XYZ", description: "Purpose", boundary: "Network" } 
# - id: unique ID where "XYZ" will be used by pgpass.ts to identify connection
# - description: human=friendly elaboration of purpose
# - boundary: human=friendly name of network or location of the connection
#
# * `pgpass test` will list warning/issues
# * `pgpass ls conn` will list all connections to copy/paste ID
# * `pgpass env --conn-id="MY_SPECIAL_DB"` exports conn env vars
# * `pgpass psql --conn-id="MY_SPECIAL_DB"` emits psql command
# * `pgpass url --conn-id="MY_SPECIAL_DB"` emits URL
# * `pgpass inspect` allows detailed inspection in JSON5 format
# -----------------------------------------------------------------------------

# hostname:port:database:username:password
# 192.168.2.x:5432:database:postgres:sup3rSecure!
{{- if (index . "udiaas") }}
{{- if (index . "udiaas" "postgres") }}
{{- if (index . "udiaas" "postgres" "password") }}
# { id: "UDIAAS_DB", description: "Universal Data Infrastructure", boundary: "Network" }
localhost:{{ .udiaas.postgres.port }}:{{ .udiaas.postgres.database }}:{{ .udiaas.postgres.user }}:{{ .udiaas.postgres.password }}
{{- end}}
{{- end}}
{{- end}}

{{- if (index . "udiaas") }}
{{- if (index . "udiaas" "pgbouncer") }}
# { id: "UDIAAS_PGBOUNCER", description: "Universal Data connection pooler", boundary: "Network" }
localhost:{{ .udiaas.pgbouncer.port }}:{{ .udiaas.postgres.database }}:{{ .udiaas.postgres.user }}:{{ .udiaas.postgres.password }}
{{- end}}
{{- end}}
