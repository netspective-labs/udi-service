#---------------------------------------------------------------------------------
# If you need a variable to help isolate machine- or user-specific and secrets
# configuration first review https://www.chezmoi.io/reference/templates/variables/
# and then, if an existing variable will not work, add a new [data.*] variable.
# All variables defined in the [data] section will be available as `.x.y.z` in
# chezmoi *.tmpl. In the CLI you can run `chezmoi data` to see what's available.
#---------------------------------------------------------------------------------
# If there are variables needed that are not machine-specific or user-specific
# then define those using `.chezmoidata.$FORMAT` strategy (see chezmoi docs).
#---------------------------------------------------------------------------------
[data]

    # add [data.git.credential.helpers.static.GITHUB] for generating the following in .gitconfig:
    [data.git.credential.helpers.static.GITHUB]
        site = "https://github.com"
        username = "username"
        password = "PERSONAL_ACCESS_TOKEN_VALUE"
        type = "GitHub Personal Access Token"
        expires = "never"

    # add [data.github.user.prime.*] for generating the following in .gitconfig:
    [data.github.user.prime]
        id = 'username'
        pat = 'PERSONAL_ACCESS_TOKEN_VALUE'
        insteadof_in_gitconfig = "yes"

    # add [data.udiaas.postgres.*] for generating udiaas postgres docker service:
    [data.udiaas.postgres]
        version = "16"
        user = "postgres"
        password = "UDIAAS_POSTGRES_PASSWORD"
        password_encoded = "UDIAAS_POSTGRES_PERCENTAGE_ENCODED_PASSWORD"
        database = "udiaas_prime"
        port = "5432"

    # add [data.sudo_user.*] for creating the ansible var file
    [data.sudo_user]
        password = "SUDO_USER_PASSWORD"

    # add [data.udiaas.keycloak.*] for generating udiaas keycloak docker service:
    [data.udiaas.keycloak]
        version = "22.0.4"
        user = "admin"
        password = "UDIAAS_KEYCLOAK_ADMIN_PASSWORD"
        database = "udiaas_keycloak"
        fqdn = "UDIAAS_KEYCLOAK_FQDN"
        port = "8080"

    # add [data.udiaas.postgrest.*] for generating udiaas postgREST docker service:
    [data.udiaas.postgrest]
        version = "v11.2.1"
        port = "3000"

    # add [data.udiaas.postgraphile.*] for generating udiaas postGraphile docker service:
    [data.udiaas.postgraphile]
        version = "4.14.0"
        port = "5000"
        
    # add [data.udiaas.emailengine.*] for generating udiaas emailengine docker service:
    [data.udiaas.emailengine]
        version = "v2.39.0"
        port = "6000"
        es_port = "9200"
        es_version = "8.10.2"
        secret = "UDIAAS_EMAILENGINE_SECRET"

    # add [data.udiaas.grafana.*] for generating udiaas grafana docker service:
    [data.udiaas.grafana]
        version = "10.2.0"
        port = "7000"

    # add [data.udiaas.prometheus.*] for generating udiaas prometheus docker service:
    [data.udiaas.prometheus]
        version = "v2.47.2"
        port = "9090"

    # add [data.udiaas.postresql_exporter.*] for generating udiaas postresql_exporter docker service:
    [data.udiaas.postresql_exporter]
        version = "0.15.0"
        port = "9187"

    # add [data.udiaas.aws.*] for generating udiaas aws access credentials:
    [data.udiaas.aws]
        access_key = "AWS_IAM_IDENTITY_ACCESS_KEY"
        secret_key = "AWS_IAM_IDENTITY_SECRET_KEY"
    
    # add [data.udiaas.digitalocean.*] for generating udiaas DO access credential:
    [data.udiaas.digitalocean]
        access_token = "DIGITALOCEAN_ACCESS_TOKEN"  

    # add [data.udiaas.openobserve.*] for generating udiaas openobserve docker service:
    [data.udiaas.openobserve]
        version = "v0.7.0"
        port = "5080"
        user_email = "UDIAAS_OPENOBSERVE_USER_EMAIL"
        user_password = "UDIAAS_OPENOBSERVE_USER_PASSWORD"

    # add [data.udiaas.zitadel.*] for generating udiaas zitadel docker service:
    [data.udiaas.zitadel]
        version = "v2.41.1"
        port = "8090"
        masterkey = "UDIAAS_ZITADEL_MASTERKEY_32_CHARACTER"
        admin_user = "UDIAAS_ZITADEL_ADMIN_USER"
        admin_password = "UDIAAS_ZITADEL_ADMIN_PASSWORD"
        fqdn = "UDIAAS_ZITADEL_DOMAIN"
        database = "udiaas_zitadel"

    # add [data.udiaas.portainer.*] for generating udiaas portainer docker service:
    [data.udiaas.portainer]
        version = "1.25.0"
        port = "9000"

    # add [data.udiaas.pgbouncer.*] for generating udiaas postgres connection pooler:
    [data.udiaas.pgbouncer]
        version = "1.21.0-p2"
        port = "6432"
    
    # add [data.udiaas.node-exporter.*] for generating udiaas node-exporter docker service:
    [data.udiaas.node-exporter]
        version = "v1.7.0"
        port = "9100"
		
    # add [data.udiaas.alert-manager.*] for generating udiaas alert-manager docker service:
    [data.udiaas.alert-manager]
        version = "v0.27.0"
        port = "9093"
		
    # add [data.udiaas.loki.*] for generating udiaas loki docker service:
    [data.udiaas.loki]
        version = "main-d54e087"
        port = "3100"
		
    # add [data.udiaas.promtail.*] for generating udiaas promtail docker service:
    [data.udiaas.promtail]
        version = "main-d54e087"
		
